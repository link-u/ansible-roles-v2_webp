---
# defaults/install.yml (webp)
# Prefix : webp

- name: Check mozjpeg is installed
  stat:
    path: "{{ webp_prefix }}/bin/cwebp"
  register: webp_cmd

- block:
    - name: install build packages
      become: yes
      apt:
        name: "build-essential"
        update_cache: yes

    - name: Create tmp directory for source code
      file:
        path: "/tmp/src_webp"
        state: directory

    - name: Download WebP tarball
      become: yes
      unarchive:
        src: "{{ webp_download_url }}"
        dest: "/tmp/src_webp"
        remote_src: true

    - name: configure and make uninstall
      command: "{{ item }}"
      args:
        chdir: "/tmp/src_webp/libwebp-{{ webp_version }}"
      loop:
        - "./configure --prefix={{ webp_prefix }}"
        - "make uninstall"

    - name: Remove gif2webp of make install version
      file:
        path: "{{ webp_prefix }}/bin/gif2webp"
        state: absent

    - name: Remove tmp directory for source code
      file:
        path: "/tmp/src_webp"
        state: absent
  when:
    - webp_cmd.stat.exists | bool
    - (not webp_cmd.stat.islnk) | bool

- name: Trust our package maintainers.
  apt_key:
    id: 4DE76DC836A27DBAE17FAC4B09C9B9C18F429AAE
    url: https://pkg.link-u.co.jp/key.asc
    state: present

- name: Add our apt repository.
  apt_repository:
    repo: deb https://pkg.link-u.co.jp/{{ ansible_distribution_release }} ./
    state: present
  register: __webp_add_apt_repo

- name: Update apt repository
  apt:
    update_cache: yes
  when: __webp_add_apt_repo.changed | bool

- name: Install packages
  apt:
    name: "webp"
    state: present
    update_cache: yes

- name: Create a symbolic link
  file:
    src: "/usr/bin/{{ item }}"
    dest: "{{ webp_prefix }}/bin/{{ item }}"
    owner: root
    group: root
    state: link
  loop: ["cwebp", "dwebp", "gif2webp"]
